{"version":3,"sources":["Components/Section/Section.module.css","Components/Filter/Filter.module.css","Components/ContactList/ContactList.module.css","Components/EmptyText/EmptyText.module.css","Components/Section/Section.js","Redux/phonebook/contacts-operations.js","Redux/phonebook/contacts-selectors.js","Redux/phonebook/contacts-actions.js","Components/AddContactForm/AddContactForm.js","Components/ContactItem/ContactItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/EmptyText/EmptyText.js","App.js","Redux/phonebook/contacts-reducer.js","Redux/store.js","index.js","Components/ContactItem/ContactItem.module.css","Components/AddContactForm/AddContactForm.module.css"],"names":["module","exports","Section","title","children","className","s","Title","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","response","data","message","addContact","name","number","email","contact","post","deleteContact","id","delete","getContacts","state","contacts","getFilter","filter","getLoading","loading","getFilteredContacts","createSelector","normFilter","toLowerCase","includes","changeFilter","createAction","AddContactForm","useState","setName","setNumber","setEmail","useSelector","selectors","dispatch","useDispatch","handleChange","e","target","value","resetState","Form","autoComplete","onSubmit","preventDefault","alreadyExist","some","alert","nanoid","operations","actions","currentTarget","reset","CONFIG","map","field","Label","label","onChange","Input","type","pattern","required","Reminder","Button","disabled","size","IconSpinner","Icon","ContactItem","onClick","Item","Wrapper","Name","Number","TelLink","href","Email","MailLink","ContactList","useEffect","contactsList","Filter","total","length","EmptyText","Text","App","contactsLength","createReducer","fulfilled","payload","pending","rejected","meta","arg","error","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0750fd86.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__1pv37\",\"Title\":\"Section_Title__1BVO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__2wFcp\",\"Input\":\"Filter_Input__3K808\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__dJfZQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Text\":\"EmptyText_Text__e1qdg\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={s.Section}>\r\n      {title && <h1 className={s.Title}>{title}</h1>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://61f08b4e732d93001778eab3.mockapi.io';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get('/contacts');\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async ({ name, number, email }, { rejectWithValue }) => {\r\n    try {\r\n      const contact = { name, number, email };\r\n      const response = await axios.post('/contacts', contact);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/contacts/${id}`);\r\n      return response.data.id;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts;\r\nexport const getFilter = state => state.filter;\r\nexport const getLoading = state => state.loading;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normFilter),\r\n    );\r\n  },\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('contacts/ChangeFilter');\r\n","import { useState } from 'react';\r\nimport s from './AddContactForm.module.css';\r\nimport CONFIG from '../../Data/inputConfig.json';\r\nimport { AiOutlineUserAdd } from 'react-icons/ai';\r\nimport { BiLoader } from 'react-icons/bi';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { operations, actions, selectors } from 'Redux/phonebook';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport default function AddContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  const contacts = useSelector(selectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const loading = useSelector(selectors.getLoading);\r\n\r\n  const handleChange = e => {\r\n    switch (e.target.name) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        break;\r\n      case 'number':\r\n        setNumber(e.target.value);\r\n        break;\r\n      case 'email':\r\n        setEmail(e.target.value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const alreadyExist = contacts.some(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    if (alreadyExist) {\r\n      alert(`${name} is already exists in contacts`);\r\n    } else {\r\n      const contact = { id: nanoid(), name, number, email };\r\n      dispatch(operations.addContact(contact));\r\n    }\r\n    dispatch(actions.changeFilter(''));\r\n    e.currentTarget.reset();\r\n    resetState();\r\n  };\r\n\r\n  const resetState = () => {\r\n    setName('');\r\n    setNumber('');\r\n    setEmail('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.Form} autoComplete=\"on\" onSubmit={handleSubmit}>\r\n      {CONFIG.map(field => {\r\n        const state = { name, number, email };\r\n        return (\r\n          <div key={field.name}>\r\n            <label className={s.Label}>\r\n              {field.label}\r\n              <input\r\n                id={field.id}\r\n                value={state[field.name]}\r\n                onChange={handleChange}\r\n                className={s.Input}\r\n                type={field.type}\r\n                name={field.name}\r\n                pattern={field.pattern}\r\n                title={field.title}\r\n                required={field.required}\r\n                autoComplete=\"true\"\r\n              />\r\n            </label>\r\n          </div>\r\n        );\r\n      })}\r\n      <p className={s.Reminder}>Fields marked with * are required</p>\r\n      <button\r\n        className={s.Button}\r\n        type=\"submit\"\r\n        disabled={loading === 'adding'}\r\n      >\r\n        {loading === 'adding' && (\r\n          <BiLoader size={14} className={s.IconSpinner} />\r\n        )}\r\n        {loading !== 'adding' && (\r\n          <AiOutlineUserAdd className={s.Icon} size={16} />\r\n        )}\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactItem.module.css';\r\nimport { AiFillDelete } from 'react-icons/ai';\r\nimport { BiLoader } from 'react-icons/bi';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectors } from 'Redux/phonebook';\r\nfunction ContactItem({ id, name, number, email, onClick }) {\r\n  const loading = useSelector(selectors.getLoading);\r\n  return (\r\n    <li className={s.Item}>\r\n      <div className={s.Wrapper}>\r\n        <p className={s.Name}>{name}:</p>\r\n        <p className={s.Number}>\r\n          <a className={s.TelLink} href={`tel:${number}`}>\r\n            {number}\r\n          </a>\r\n        </p>\r\n        <p className={s.Email}>\r\n          <a className={s.MailLink} href={`mailto:${email}`}>\r\n            {email}\r\n          </a>\r\n        </p>\r\n      </div>\r\n      <button type=\"button\" onClick={() => onClick()} className={s.Button}>\r\n        {loading !== id && <AiFillDelete size={18} />}\r\n        {loading === id && <BiLoader size={18} className={s.IconSpinner} />}\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ContactItem;\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  email: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport s from './ContactList.module.css';\r\nimport ContactItem from '../ContactItem';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { operations, selectors } from 'Redux/phonebook';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(selectors.getFilteredContacts);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = id => dispatch(operations.deleteContact(id));\r\n  const loading = useSelector(selectors.getLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(operations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {loading === 'loadingContacts' && <p>Loading...</p>}\r\n      <ul className={s.contactsList}>\r\n        {contacts &&\r\n          contacts.map(contact => (\r\n            <ContactItem\r\n              key={contact.id}\r\n              id={contact.id}\r\n              name={contact.name}\r\n              number={contact.number}\r\n              email={contact.email}\r\n              onClick={() => onDeleteContact(contact.id)}\r\n            />\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport s from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from 'Redux/phonebook/contacts-actions';\r\nimport { selectors } from '../../Redux/phonebook';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(selectors.getFilter);\r\n  const total = useSelector(selectors.getContacts).length;\r\n  const dispatch = useDispatch();\r\n  const onChange = e => dispatch(actions.changeFilter(e.target.value));\r\n  return (\r\n    <label className={s.Label}>\r\n      Find contact by name in {total} contacts\r\n      <input\r\n        className={s.Input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport s from './EmptyText.module.css';\r\n\r\nconst EmptyText = () => {\r\n  return <p className={s.Text}>Your contact list is empty</p>;\r\n};\r\n\r\nexport default EmptyText;\r\n","import './App.css';\r\nimport Section from './Components/Section';\r\nimport AddContactForm from './Components/AddContactForm';\r\nimport ContactList from './Components/ContactList';\r\nimport Filter from './Components/Filter';\r\nimport EmptyText from './Components/EmptyText';\r\nimport { useSelector } from 'react-redux';\r\n// import { getContacts } from './Redux/phonebook/contacts-selectors';\r\n// import { getLoadingContactList } from './Redux/phonebook/contacts-selectors';\r\nimport { selectors } from './Redux/phonebook';\r\n\r\nexport default function App() {\r\n  const contactsLength = useSelector(selectors.getContacts).length;\r\n  const loading = useSelector(selectors.getLoading);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Section title=\"Phonebook\">\r\n        <AddContactForm />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        {contactsLength > 1 && <Filter />}\r\n        <ContactList />\r\n        {contactsLength === 0 && loading === 'notLoading' && <EmptyText />}\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { changeFilter } from './contacts-actions';\r\nimport {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n} from './contacts-operations';\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer('notLoading', {\r\n  [fetchContacts.pending]: () => 'loadingContacts',\r\n  [fetchContacts.fulfilled]: () => 'notLoading',\r\n  [fetchContacts.rejected]: () => 'notLoading',\r\n\r\n  [addContact.pending]: () => 'adding',\r\n  [addContact.fulfilled]: () => 'notLoading',\r\n  [addContact.rejected]: () => 'notLoading',\r\n\r\n  [deleteContact.pending]: (_, { meta }) => meta.arg,\r\n  [deleteContact.fulfilled]: () => 'notLoading',\r\n  [deleteContact.rejected]: () => 'notLoading',\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, { payload }) => payload,\r\n  [fetchContacts.pending]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './phonebook/contacts-reducer';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\n\r\n// const contactsPersistConfig = {\r\n//   key: 'contacts',\r\n//   storage,\r\n//   blacklist: ['filter'],\r\n// };\r\n\r\nexport const store = configureStore({\r\n  // reducer: persistReducer(contactsPersistConfig, contactsReducer),\r\n  reducer: contactsReducer,\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// export const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store /*persistor*/ } from './Redux/store';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"ContactItem_Item__1pcj9\",\"Wrapper\":\"ContactItem_Wrapper__2weQw\",\"Name\":\"ContactItem_Name__h_mV3\",\"Number\":\"ContactItem_Number__1bOX1\",\"Email\":\"ContactItem_Email__Lr4B3\",\"TelLink\":\"ContactItem_TelLink__3fIY5\",\"MailLink\":\"ContactItem_MailLink__3LXym\",\"Button\":\"ContactItem_Button__1eZwY\",\"IconSpinner\":\"ContactItem_IconSpinner__1ad-7\",\"spinner\":\"ContactItem_spinner__2voQN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"AddContactForm_Form__3kQ1y\",\"Label\":\"AddContactForm_Label__1qIh0\",\"Input\":\"AddContactForm_Input__ArS8c\",\"Reminder\":\"AddContactForm_Reminder__3kQFG\",\"Button\":\"AddContactForm_Button__3Q53a\",\"Icon\":\"AddContactForm_Icon__zB42n\",\"IconSpinner\":\"AddContactForm_IconSpinner__3W67k\",\"spinner\":\"AddContactForm_spinner__1t7c7\"};"],"sourceRoot":""}